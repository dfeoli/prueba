name: Validate KiCad Push

on:
  push:
    branches:
      - "**"
  pull_request:
    branches:
      - "**"

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Check if actor is admin
        id: check_admin
        run: |
          # 👇 Pon aquí tu usuario administrador real
          ADMINS=("alguien" "otroadmin" "inventado")

          echo "Actor que disparó el workflow: $GITHUB_ACTOR, lista de admins es ${ADMINS[@]}"
          if [[ " ${ADMINS[@]} " =~ " ${GITHUB_ACTOR} " ]]; then
            echo "is_admin=true" >> $GITHUB_ENV
            echo "is_admin=true" >> $GITHUB_ENV
            echo "is_admin=true" >> $GITHUB_OUTPUT
          else
            echo "is_admin=false" >> $GITHUB_ENV
            echo "is_admin=false" >> $GITHUB_OUTPUT
          fi

      - name: Get changed files
        if: steps.check_admin.outputs.is_admin == 'false'
        id: changed
        run: |
          # Asegurar historial completo
          git fetch --prune --unshallow || true
          git fetch --all
          echo "Detectado push"
          BASE_SHA=${{ github.event.before }}
          HEAD_SHA=${{ github.sha }}
          
          echo "Comparando $BASE_SHA...$HEAD_SHA"

          CHANGED_FILES=$(git diff --name-only $BASE_SHA $HEAD_SHA || true)

          echo "Archivos modificados (raw):"
          echo "$CHANGED_FILES"
          # Filtrar archivos ignorados en .gitignore
          TMP_IGNORE=$(mktemp)
          git check-ignore -v $CHANGED_FILES | awk '{print $3}' > "$TMP_IGNORE"
          FILTERED=$(echo "$CHANGED_FILES" | grep -v -f "$TMP_IGNORE" || true)
          rm -f "$TMP_IGNORE"
          FILTERED=$(echo "$CHANGED_FILES" | grep -v -f <(git check-ignore -v $CHANGED_FILES | awk '{print $3}') || true)

          echo "Archivos modificados (filtrados):"
          echo "$FILTERED"

          echo "files=$FILTERED" >> $GITHUB_ENV

      - name: Validate only one KiCad schematic changed
        env:
          files: ${{ env.files }}
        run: |
          IFS=$'\n' read -rd '' -a FILE_ARRAY <<<"${{ env.files }}"
          FILE_COUNT=${#FILE_ARRAY[@]}
          echo "Cantidad de archivos válidos modificados: $FILE_COUNT"
          if [ $FILE_COUNT -ne 1 ]; then
            echo "❌ Se modificaron más de un archivo (o ninguno). Solo se permite uno."
            exit 1
          fi

          FILE="${FILE_ARRAY[0]}"
          if [[ ! "$FILE" =~ \.kicad_sch$ ]]; then
            echo "❌ El archivo modificado no tiene extensión .kicad_sch"
            exit 1
          fi

          echo "✅ Validación exitosa: se modificó un único archivo .kicad_sch"
