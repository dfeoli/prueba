name: Validar push KiCad

on:
  push:

jobs:
  validar_push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout completo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0   # Trae todo el historial de commits, no solo el último

      - name: Obtener lista de commits del push
        id: commits
        run: |
          if [ "${{ github.event.before }}" = "0000000000000000000000000000000000000000" ]; then
            # Primer push del repo
            echo "commits=$(git rev-list HEAD)" >> $GITHUB_OUTPUT
          else
            echo "commits=$(git rev-list ${{ github.event.before }}..${{ github.sha }})" >> $GITHUB_OUTPUT
          fi

      - name: Obtener lista de archivos modificados
        id: files
        run: |
          if git rev-parse ${{ github.event.before }} >/dev/null 2>&1; then
            FILES=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }})
          else
            FILES=$(git diff-tree --no-commit-id --name-only -r ${{ github.sha }})
          fi

          {
            echo 'archivos<<EOF'
            echo "$FILES"
            echo 'EOF'
          } >> $GITHUB_OUTPUT

      - name: Validar push
        run: |
          ADMIN="dfeolii" # usuario administrador del repo
          AUTHOR="${{ github.actor }}"

          # Permitir push directo si es admin
          if [ "$AUTHOR" = "$ADMIN" ]; then
            echo "Usuario admin, push permitido."
            exit 0
          fi

          # Leer archivos como array (soporta múltiples líneas)
          mapfile -t FILE_ARRAY <<< "${{ steps.files.outputs.archivos }}"

          # Filtrar ar
